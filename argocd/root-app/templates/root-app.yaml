# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

{{- $projectName := .Values.argo.namespace | default "default" }}
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: {{$projectName}}
  namespace: argocd
spec:
  sourceNamespaces:
    - {{ required "A valid namespace entry required!" .Values.argo.namespace }}
  # this can be modified later to only add known helm chart and git repos
  sourceRepos:
    - '*'
  destinations:
    # All namespace or servers allowed.
    - namespace: '*'
      server: '*'
  clusterResourceWhitelist:
    - group: '*'
      kind: '*'
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: root-app
  namespace: {{ required "A valid namespace entry required!" .Values.argo.namespace }}
spec:
  project: {{$projectName}}
  sources:
    - path: argocd/applications
      repoURL: {{ required "A valid deployRepoURL entry required!" .Values.argo.deployRepoURL }}
      targetRevision: {{ required "A valid deployRepoRevision entry required!" .Values.argo.deployRepoRevision | quote }}
      helm:
        valueFiles:
        # Load every yaml file in .Values.root.clusterValues as root-app values
          {{- range .Values.root.clusterValues }}
            {{- printf "- $values/%s" . | nindent 10 }}
          {{- end }}
        # Propagate local values to child app, overwriting the values read from remote git repo
        {{- if .Values.root.useLocalValues }}
        valuesObject:
          argo:
            {{- .Values.argo | toYaml | nindent 12 }}
          postCustomTemplateOverwrite:
            {{- .Values.postCustomTemplateOverwrite | toYaml | nindent 12 }}
        {{- end }}
    - repoURL: '{{ required "A valid deployRepoURL entry required!" .Values.argo.deployRepoURL }}'
      targetRevision: {{ required "A valid deployRepoRevision entry required!" .Values.argo.deployRepoRevision | quote }}
      ref: values
  destination:
    namespace: {{ required "A valid namespace entry required!" .Values.argo.namespace }}
    server: "https://kubernetes.default.svc" # root-app should always be deployed in Argo CD server
  syncPolicy:
    {{- if .Values.argo.autosync }}
    automated:
      prune: true
      selfHeal: true
    retry:
      limit: 100
      backoff:
        duration: 5s
        maxDuration: 3m0s
        factor: 2
    {{- end }}
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
  # FIXME https://github.com/argoproj/argo-cd/issues/17433
  ignoreDifferences:
    - group: argoproj.io
      kind: Application
      jqPathExpressions:
        - .metadata.finalizers[]? | select(. == "post-delete-finalizer.argocd.argoproj.io" or . == "post-delete-finalizer.argocd.argoproj.io/cleanup")
        - if (.metadata.finalizers | length) == 0 then .metadata.finalizers else empty end
