# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

# Platform Keycloak configuration
# This manages the complete Keycloak lifecycle: operator installation, instance deployment, and configuration

# Operator installation settings
operator:
  enabled: true
  namespace: keycloak-system
  install:
    image: eclipsefdn/kubectl:okd-c1
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

# Keycloak instance configuration
keycloak:
  enabled: true
  instanceName: platform-keycloak
  instanceNamespace: orch-platform
  instances: 1
  # Bootstrap admin credentials from the secret created by deploy.go
  bootstrapAdmin:
    user:
      secret: platform-keycloak
  hostname:
    strict: false
  http:
    httpEnabled: true
    httpPort: 8080
  proxy:
    headers: xforwarded
  db:
    vendor: postgres
    host: postgresql.orch-database.svc.cluster.local
    port: 5432
    database: orch-platform-platform-keycloak
    usernameSecret:
      name: platform-keycloak-local-postgresql
      key: PGUSER
    passwordSecret:
      name: platform-keycloak-local-postgresql
      key: PGPASSWORD
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  # Additional Keycloak options (environment variables)
  additionalOptions:
    - name: KC_PROXY_HEADERS
      value: xforwarded
    - name: KC_HOSTNAME_STRICT
      value: "false"
    - name: KC_HOSTNAME_STRICT_HTTPS
      value: "false"
  ingress:
    enabled: false
  networkPolicy:
    enabled: false

# Service alias for backward compatibility
service:
  enabled: true
  name: platform-keycloak
  namespace: orch-platform
  targetService: platform-keycloak-service
  targetNamespace: orch-platform
  port: 8080

# Configuration CLI for realm setup
configCli:
  enabled: true
  image: curlimages/curl:8.4.0
  # Authentication using the platform-keycloak secret
  auth:
    secretName: platform-keycloak
    usernameKey: username
    passwordKey: password
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

# Configuration bootstrap via REST API
# The bootstrap job uses direct Keycloak Admin API calls to configure realms and clients
