# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

# Keycloak configuration using official operator
# This creates a Keycloak instance using the official operator

keycloak:
  enabled: true
  instanceName: platform-keycloak
  instanceNamespace: keycloak-system
  instances: 1
  
  # Bootstrap admin from generated secret (created by deploy.go)
  bootstrapAdmin:
    user:
      nameSecret:
        name: platform-keycloak
        key: admin-username
      passwordSecret:
        name: platform-keycloak
        key: admin-password
  
  hostname:
    strict: false
  
  http:
    httpEnabled: true
    httpPort: 8080
  
  proxy:
    headers: xforwarded
  
  db:
    vendor: postgres
    host: postgresql.orch-database.svc.cluster.local
    port: 5432
    database: orch-platform-platform-keycloak
    usernameSecret:
      name: platform-keycloak-local-postgresql
      key: PGUSER
    passwordSecret:
      name: platform-keycloak-local-postgresql
      key: PGPASSWORD
  
  additionalOptions:
    - name: KC_PROXY_HEADERS
      value: xforwarded
    - name: KC_HOSTNAME_STRICT
      value: "false"
    - name: KC_HOSTNAME_STRICT_HTTPS
      value: "false"

  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

# Keycloak configuration CLI for bootstrapping realms and clients
  configCli:
    enabled: true
    
    # Bootstrap job configuration - using custom REST API approach
    # This creates a ConfigMap with realm configurations and a Job that applies them
    # via direct REST API calls to Keycloak Admin API
    
    auth:
      username: admin
      password: admin
    
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    
    # Configuration files to be applied to Keycloak
    # Each key becomes a file in the ConfigMap
    # The bootstrap job will process each file and apply the configuration
    configuration:
      realm-master.json: |
        {
          "realm": "master",
          "accountTheme": "keycloak",
          "displayName": "Keycloak",
          "displayNameHtml": "<img src='https://raw.githubusercontent.com/open-edge-platform/orch-utils/73df5d1e99a81ae333d94b1c47dd9bef7fa03ae9/keycloak/one-edge-platform-login-title.png'></img>",
          "defaultSignatureAlgorithm": "PS512",
          "accessTokenLifespan": 3600,
          "ssoSessionIdleTimeout": 5400,
          "ssoSessionMaxLifespan": 43200,
          "passwordPolicy": "length(14) and digits(1) and specialChars(1) and upperCase(1) and lowerCase(1)",
          "bruteForceProtected": true,
          "permanentLockout": false,
          "maxFailureWaitSeconds": 900,
          "minimumQuickLoginWaitSeconds": 60,
          "waitIncrementSeconds": 300,
          "quickLoginCheckMilliSeconds": 200,
          "maxDeltaTimeSeconds": 43200,
          "failureFactor": 5,
          "clients": [
            {
              "clientId": "system-client",
              "name": "System Client",
              "description": "Client for System Operations",
              "enabled": true,
              "clientAuthenticatorType": "client-secret",
              "secret": "system-client-secret",
              "redirectUris": ["*"],
              "webOrigins": ["*"],
              "serviceAccountsEnabled": true,
              "authorizationServicesEnabled": false,
              "directAccessGrantsEnabled": true,
              "implicitFlowEnabled": false,
              "standardFlowEnabled": true
            }
          ]
        }

# Configuration bootstrap via REST API
# The bootstrap job uses direct Keycloak Admin API calls to configure realms and clients
