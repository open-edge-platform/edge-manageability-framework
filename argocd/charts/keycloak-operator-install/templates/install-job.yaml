# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: batch/v1
kind: Job
metadata:
  name: keycloak-operator-install
  namespace: {{ .Values.operator.namespace | default "keycloak-system" }}
  annotations:
    argocd.argoproj.io/sync-wave: "110"
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
  labels:
    app.kubernetes.io/name: keycloak-operator-install
    app.kubernetes.io/instance: keycloak-operator-install
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/name: keycloak-operator-install
        app.kubernetes.io/instance: keycloak-operator-install
    spec:
      restartPolicy: Never
      serviceAccountName: keycloak-operator-installer
      containers:
      - name: keycloak-operator-installer
        image: eclipsefdn/kubectl:okd-c1
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash"]
        args:
          - -c
          - |
            set -e
            echo "Installing Keycloak operator CRDs and operator..."
            
            # Apply Keycloak CRDs from ConfigMap
            echo "Applying Keycloak CRDs..."
            kubectl apply -f /etc/keycloak/crds/keycloak-crds.yaml
            
            # Apply Keycloak operator from ConfigMap
            echo "Applying Keycloak operator..."
            kubectl apply -f /etc/keycloak/operator/keycloak-operator.yaml
            
            echo "Keycloak operator installation completed successfully!"
        volumeMounts:
        - name: ca-certificates
          mountPath: /etc/ssl/certs/ca-certificates.crt
          subPath: ca-certificates.crt
          readOnly: true
        - name: keycloak-crds
          mountPath: /etc/keycloak/crds
          readOnly: true
        - name: keycloak-operator
          mountPath: /etc/keycloak/operator
          readOnly: true
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: ca-certificates
        configMap:
          name: ca-certificates
          items:
          - key: ca-certificates.crt
            path: ca-certificates.crt
      - name: keycloak-crds
        configMap:
          name: keycloak-crds
      - name: keycloak-operator
        configMap:
          name: keycloak-operator
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: Always
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-operator-installer
  namespace: {{ .Values.operator.namespace | default "keycloak-system" }}
  annotations:
    argocd.argoproj.io/sync-wave: "100"
  labels:
    app.kubernetes.io/name: keycloak-operator-installer
    app.kubernetes.io/instance: keycloak-operator-installer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keycloak-operator-installer
  annotations:
    argocd.argoproj.io/sync-wave: "100"
  labels:
    app.kubernetes.io/name: keycloak-operator-installer
    app.kubernetes.io/instance: keycloak-operator-installer
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "get", "list", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "get", "list", "patch", "update"]
- apiGroups: [""]
  resources: ["serviceaccounts", "services"]
  verbs: ["create", "get", "list", "patch", "update"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings"]
  verbs: ["create", "get", "list", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keycloak-operator-installer
  annotations:
    argocd.argoproj.io/sync-wave: "100"
  labels:
    app.kubernetes.io/name: keycloak-operator-installer
    app.kubernetes.io/instance: keycloak-operator-installer
roleRef:
  kind: ClusterRole
  name: keycloak-operator-installer
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: keycloak-operator-installer
  namespace: {{ .Values.operator.namespace | default "keycloak-system" }}