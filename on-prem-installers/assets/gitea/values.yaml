# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

redis-cluster:
  enabled: false
postgresql:
  enabled: true
  image:
    registry: docker.io
    repository: library/postgres
    tag: 16.10-bookworm
  postgresqlDataDir: /var/postgres/data
  primary:
    initContainers:
    - name: init-config-check
      image: busybox:1.36
      command:
        - "sh"
        - "-c"
        - |
          if [ -f "/var/postgres/data/PG_VERSION" ]; then
            echo "Previous database detected. Install postgresql.conf and pg_hba.conf."
            cp /var/postgres/postgresql.conf /var/postgres/data/postgresql.conf
            cp /var/postgres/pg_hba.conf /var/postgres/data/pg_hba.conf
          else
            echo "Fresh install. Allowing official entrypoint to generate default configuration."
          fi
      volumeMounts:
      - name: postgresql-config
        mountPath: /var/postgres/postgresql.conf
        subPath: postgresql.conf
      - name: postgresql-hba
        mountPath: /var/postgres/pg_hba.conf
        subPath: pg_hba.conf
      - name: data
        mountPath: /var/postgres
    extraEnvVars:
    - name: HOME
      value: /var/postgres
    persistence:
      enabled: true
      storageClass: "openebs-hostpath"
      mountPath: /var/postgres
    extraVolumeMounts:
    - name: postgresql-run
      mountPath: /var/run
    extraVolumes:
    - name: postgresql-run
      emptyDir: {}
    - name: postgresql-config
      configMap:
        name: postgresql-config
    - name: postgresql-hba
      configMap:
        name: postgresql-hba
  extraDeploy:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: postgresql-config
    data:
      postgresql.conf: |-
        huge_pages = 'off'
        listen_addresses = '*'
        port = 5432
        max_connections = 100
        shared_buffers = 128MB
        dynamic_shared_memory_type = posix
        max_wal_size = 1GB
        min_wal_size = 80MB
        log_timezone = UTC
        datestyle = 'iso, mdy'
        timezone = UTC
        lc_messages = 'en_US.utf8'
        lc_monetary = 'en_US.utf8'
        lc_time = 'en_US.utf8'
        default_text_search_config = 'pg_catalog.english'
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: postgresql-hba
    data:
      pg_hba.conf: |-
        # TYPE  DATABASE        USER            ADDRESS                 METHOD
        local   all             all                                     trust
        host    all             all             127.0.0.1/32            trust
        host    all             all             ::1/128                 trust
        local   replication     all                                     trust
        host    replication     all             127.0.0.1/32            trust
        host    replication     all             ::1/128                 trust
        host all all all scram-sha-256
postgresql-ha:
  enabled: false

persistence:
  enabled: true
  storageClass: "openebs-hostpath"

gitea:
  config:
    database:
      DB_TYPE: postgres
    session:
      PROVIDER: db
    cache:
      ADAPTER: memory
    queue:
      TYPE: level
    indexer:
      ISSUE_INDEXER_TYPE: bleve
      REPO_INDEXER_ENABLED: true
    repository:
      ENABLE_PUSH_CREATE_USER: true
      DEFAULT_PUSH_CREATE_PRIVATE: true
      FORCE_PRIVATE: true
    service:
      DISABLE_REGISTRATION: true
    server:
      APP_DATA_PATH: /data
      DOMAIN: gitea-http.gitea.svc.cluster.local
      PROTOCOL: https
      CERT_FILE: /tmp/secret-volume/tls.crt
      KEY_FILE: /tmp/secret-volume/tls.key

service:
  http:
    port: 443

extraVolumes:
- name: secret-volume
  secret:
    secretName: gitea-tls-certs

extraContainerVolumeMounts:
- name: secret-volume
  readOnly: true
  mountPath: /tmp/secret-volume

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  seccompProfile:
    type: RuntimeDefault
  runAsNonRoot: true
