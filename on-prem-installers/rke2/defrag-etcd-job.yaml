apiVersion: batch/v1
kind: CronJob
metadata:
  name: etcd-defrag-cronjob
  namespace: default
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      template:
        spec:
          hostNetwork: true
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          initContainers:
          - name: install-etcdctl
            image: alpine:3.22.1
            command: ["/bin/sh", "-c"]
            args:
            - |
              apk add wget
              ETCD_VER=v3.5.19
              wget -q -O /tmp/etcd.tar.gz https://github.com/etcd-io/etcd/releases/download/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz
              tar -xzf /tmp/etcd.tar.gz -C /tmp --strip-components=1
              cp /tmp/etcdctl /shared/etcdctl
              chmod +x /shared/etcdctl
            volumeMounts:
            - name: shared-bin
              mountPath: /shared
            securityContext:
              runAsUser: 0
              seccompProfile:
                type: RuntimeDefault
            envFrom:
            - configMapRef:
                name: proxy-config
          containers:
          - name: etcdctl
            image: alpine:3.22.1
            command:
            - /bin/sh
            - -c
            - |
              #!/bin/sh
              # Set the threshold size in bytes (4GB in this case)
              # 4GB is chosen based on etcd recommendations to avoid performance degradation and excessive disk usage.
              THRESHOLD_SIZE=$((4 * 1024 * 1024 * 1024))

              CURRENT_SIZE=$(ETCDCTL_API=3 etcdctl --endpoints=https://localhost:2379 --write-out="json" \
                --cert="/etc/etcd/certs/server-client.crt" \
                --key="/etc/etcd/certs/server-client.key" \
                --cacert="/etc/etcd/certs/server-ca.crt" \
                --command-timeout=30s endpoint status | awk -F'dbSize":' '{split($2,a,","); print a[1]}')

              # Check if the current size exceeds the threshold
              if [ "$CURRENT_SIZE" -gt "$THRESHOLD_SIZE" ]; then
                echo "Database size ($CURRENT_SIZE) is greater than the threshold ($THRESHOLD_SIZE). Running defragmentation..."
                ETCDCTL_API=3 etcdctl --endpoints=https://localhost:2379 \
                  --cert="/etc/etcd/certs/server-client.crt" \
                  --key="/etc/etcd/certs/server-client.key" \
                  --cacert="/etc/etcd/certs/server-ca.crt" \
                  defrag --command-timeout=30s
              else
                echo "Database size ($CURRENT_SIZE) is below the threshold ($THRESHOLD_SIZE). No action needed."
              fi
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
              runAsGroup: 1001
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              seccompProfile:
                type: RuntimeDefault
            resources:
              requests:
                memory: "64Mi"
                cpu: "50m"
              limits:
                memory: "128Mi"
                cpu: "100m"
            volumeMounts:
            - name: shared-bin
              mountPath: /usr/local/bin
            - name: tmp
              mountPath: /tmp
            - name: etcd-certs
              mountPath: /etc/etcd/certs
              readOnly: true
            env:
            - name: PATH
              value: "/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          restartPolicy: OnFailure
          volumes:
          - name: shared-bin
            emptyDir: {}
          - name: tmp
            emptyDir: {}
          - name: etcd-certs
            secret:
              secretName: etcd-certs