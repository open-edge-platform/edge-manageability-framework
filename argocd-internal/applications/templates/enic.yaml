# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

{{- $appName        := "enic" }}
{{- $namespace      := "enic" }}
{{- $syncWave       := "110" }}
---
{{- if (index .Values.argo.enabled $appName) }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "{{ $syncWave }}"
  name: {{$appName}}
  namespace: {{ required "A valid namespace entry required!" .Values.argo.utilsNamespace }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ required "A valid projectName entry required!" .Values.argo.utilsProject }}
  sources:
    - repoURL: {{ required "A valid chartRepoURL entry required!" .Values.argo.chartRepoURL }}
      chart: infra/charts/{{$appName}}
      targetRevision: 0.8.0
      helm:
        releaseName: {{$appName}}
        valuesObject:
          {{- $customFile := printf "custom/%s.tpl" $appName }}
          {{- $customConfig := tpl (.Files.Get $customFile) . | fromYaml }}
          {{- $baseFile := printf "configs/%s.yaml" $appName }}
          {{- $baseConfig := .Files.Get $baseFile|fromYaml}}
          {{- $overwrite := (get .Values.postCustomTemplateOverwrite $appName ) | default dict }}
          {{- mergeOverwrite $baseConfig $customConfig $overwrite | toYaml | nindent 10 }}
  destination:
    namespace: {{$namespace}}
    server: {{ required "A valid targetServer entry required!" .Values.argo.targetServer }}
  syncPolicy:
    {{- if .Values.argo.autosync }}
    automated:
      prune: true
      selfHeal: true
    retry:
      limit: 5
      backoff:
        duration: 5s
        maxDuration: 3m0s
        factor: 2
    {{- end }}
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
{{- end }}
