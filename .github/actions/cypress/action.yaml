# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

name: "UI E2E Tests"
description: "Sets up the environment with necessary tools and dependencies, then runs UI E2E tests"
inputs:
  token:
    required: true
    description: "PAT token for private repositories"
  app_orch:
    required: false
    description: "Run App Orch tests"
    default: true
  cluster_orch:
    required: false
    description: "Run Cluster Orch tests"
    default: true
  infra:
    required: false
    description: "List of tests to run for Edge Infra Manager"
    default: "cypress/e2e/infra/infra-smoke.cy.ts" # set to empty string to skip
  admin:
    required: false
    description: "Run Admin tests"
    default: true
  en_serial_number:
    required: false # NOTE this is required if the infra tests are running
    description: "Serial number of the EN"
    default: ""
  en_uuid:
    required: false # NOTE this is required if the infra tests are running
    description: "UUID of the EN"
    default: ""
runs:
  using: "composite"
  steps:
    - name: Checkout UI repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: open-edge-platform/orch-ui
        path: orch-ui
        ref: 9119eb29b359b827fc7678a729f16cb57a461645 # tests/0.1.27
        persist-credentials: false
    - run: git log -1
      shell: bash
      working-directory: orch-ui
    - name: Cache npm dependencies
      uses: actions/setup-node@v4.2.0
      with:
        cache: "npm"
        cache-dependency-path: orch-ui/package-lock.json
    - name: Install UI test deps
      working-directory: orch-ui
      shell: bash
      run: npm ci
    - name: Run Admin Cypress tests
      if: ${{ always() && inputs.admin == 'true' }}
      working-directory: orch-ui/tests
      shell: bash
      run: |
        npx cypress run --e2e \
          -s "cypress/e2e/admin/non-org-admin-smoke.cy.ts,cypress/e2e/admin/org-admin-smoke.cy.ts"
    - name: Collect Admin related logs
      if: ${{ always() && inputs.admin == 'true' }}
      working-directory: orch-ui/tests
      shell: bash
      run: |
        mkdir -p cypress/logs/admin
        kubectl logs -n orch-app -l app=app-orch-tenant-controller --tail -1 > cypress/logs/admin/app-tenant-controller.log
        kubectl logs -n orch-infra -l app.kubernetes.io/name=tenant-controller --tail -1 > cypress/logs/admin/infra-tenant-controller.log
        kubectl logs -n orch-platform -l app=keycloak-tenant-controller-pod --tail -1 > cypress/logs/admin/platform-tenant-controller.log
        kubectl logs -n orch-ui -l app=metadata-broker --tail -1 > cypress/logs/admin/metadata-broker.log

        kubectl get orgactivewatchers.orgactivewatcher.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml
        kubectl get orgs.org.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml
        kubectl get orgwatchers.orgwatcher.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml
        kubectl get projectactivewatchers.projectactivewatcher.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml
        kubectl get projects.project.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml
        kubectl get projectwatchers.projectwatcher.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml
        kubectl get runtimefolders.runtimefolder.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml
        kubectl get runtimeorgs.runtimeorg.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml
        kubectl get runtimeprojects.runtimeproject.edge-orchestrator.intel.com -o yaml > cypress/logs/admin/orgactivewatchers.yaml

    - name: Run Edge Infra Manager Cypress tests
      id: infra_tests
      if: ${{ always() && inputs.infra != '' }}
      working-directory: orch-ui/tests
      shell: bash
      env:
        EN_SERIAL_NUMBER: ${{ inputs.en_serial_number }}
        INPUTS_INFRA: ${{inputs.infra}}
      run: |
        npx cypress run --e2e \
          -s ${INPUTS_INFRA} \
          --env EN_SERIAL_NUMBER=${EN_SERIAL_NUMBER}
    - name: Collect Edge Infra Manager logs
      if: ${{ always() && inputs.infra != '' }}
      working-directory: orch-ui/tests
      shell: bash
      env:
        EN_UUID: ${{ inputs.en_uuid }}
      run: |
        mkdir -p cypress/logs/edgeinfra
        kubectl logs -n orch-infra -l app.kubernetes.io/name=inventory --tail -1 > cypress/logs/edgeinfra/inventory.log
        kubectl logs -n orch-infra -l app.kubernetes.io/name=api --tail -1 > cypress/logs/edgeinfra/api.log
        kubectl logs -n orch-infra -l app.kubernetes.io/name=apiv2 -c apiv2-proxy --tail -1 > cypress/logs/edgeinfra/apiv2-proxy.log
        kubectl logs -n orch-infra -l app.kubernetes.io/name=apiv2 -c apiv2-grpc --tail -1 > cypress/logs/edgeinfra/apiv2-grpc.log
        kubectl logs -n orch-infra -l app.kubernetes.io/name=onboarding-manager --tail -1 > cypress/logs/edgeinfra/onboarding-manager.log
        kubectl logs -n orch-infra -l app.kubernetes.io/name=host-manager --tail -1 > cypress/logs/edgeinfra/host-manager.log
        kubectl logs -n orch-infra -l app.kubernetes.io/name=dkam --tail -1 > cypress/logs/edgeinfra/dkam.log
        kubectl logs -n orch-infra -l app.kubernetes.io/name=os-resource-manager --tail -1 > cypress/logs/edgeinfra/os-resource-manager.log

        kubectl logs -n orch-iam -l app=nexus-api-gw --tail -1 > cypress/logs/edgeinfra/nexus-api-gw.log
        kubectl logs -n orch-gateway -l app.kubernetes.io/name=traefik --tail -1 > cypress/logs/edgeinfra/traefik.log

        kubectl -n enic logs $(kubectl -n enic get pods -l app=enic --no-headers | awk '{print $1}') -c fake-uuid > cypress/logs/edgeinfra/enic-fake-uuid.log || true
        kubectl -n enic exec -it $(kubectl -n enic get pods -l app=enic --no-headers | awk '{print $1}') -c edge-node -- journalctl -u onboard --no-tail > cypress/logs/edgeinfra/enic-onboard.log || true
        kubectl -n enic exec -it $(kubectl -n enic get pods -l app=enic --no-headers | awk '{print $1}') -c edge-node -- journalctl -u agents --no-tail > cypress/logs/edgeinfra/enic-agents.log || true
        kubectl -n enic exec -it $(kubectl -n enic get pods -l app=enic --no-headers | awk '{print $1}') -c edge-node -- journalctl -u node-agent --no-tail > cypress/logs/edgeinfra/enic-node-agent.log || true
        kubectl -n enic exec -it $(kubectl -n enic get pods -l app=enic --no-headers | awk '{print $1}') -c edge-node -- journalctl -u hardware-discovery-agent --no-tail > cypress/logs/edgeinfra/enic-hardware-discovery-agent.log || true

        kubectl get workflow -A > cypress/logs/edgeinfra/workflow.txt
        kubectl get hardware -A > cypress/logs/edgeinfra/hardware.txt
        kubectl get template -A > cypress/logs/edgeinfra/template.txt
        kubectl get workflow -n orch-infra workflow-${EN_UUID}-prod -o yaml > cypress/logs/edgeinfra/workflow-${EN_UUID}-prod.log || true

        kubectl describe pod -n enic > cypress/logs/edgeinfra/enic-pod-describe.txt
        kubectl describe applications -n utils enic > cypress/logs/edgeinfra/enic-argocd-app.txt
    - name: Run Cluster Orch tests
      id: cluster_orch_tests
      if: ${{ always() && inputs.cluster_orch == 'true' }}
      working-directory: orch-ui/tests
      shell: bash
      run: |
        npx cypress run --e2e \
          -s "cypress/e2e/cluster-orch/cluster-orch-smoke.cy.ts" \
          --env EN_UUID=${{ env.EN_UUID }}
    - name: Collect ClusterOrch logs
      if: ${{ always() && inputs.cluster_orch == 'true' }}
      working-directory: orch-ui/tests
      shell: bash
      run: |
        mkdir -p cypress/logs/cluster-orch

        # CAPI components
        kubectl logs -n capi-operator-system -l app=cluster-api-operator --tail -1 > cypress/logs/cluster-orch/cluster-api-operator.log
        kubectl logs -n capr-system -l cluster.x-k8s.io/provider=bootstrap-rke2 --tail -1 > cypress/logs/cluster-orch/bootstrap-rke2.log
        kubectl logs -n capr-system -l cluster.x-k8s.io/provider=control-plane-rke2 --tail -1 > cypress/logs/cluster-orch/control-plane-rke2.log

        # Orch components
        kubectl logs -n orch-cluster -l app=cluster-connect-gateway-gateway --tail -1 > cypress/logs/cluster-orch/cluster-connect-gateway-gateway.log
        kubectl logs -n orch-cluster -l app=cluster-manager-cm --tail -1 > cypress/logs/cluster-orch/cluster-manager-cm.log
        kubectl logs -n orch-cluster -l app=cluster-manager-controller --tail -1 > cypress/logs/cluster-orch/cluster-manager-controller.log
        kubectl logs -n orch-cluster -l app=southbound-api --tail -1 > cypress/logs/cluster-orch/southbound-api.log

        # ENiC components
        kubectl -n enic exec -it $(kubectl -n enic get pods -l app=enic --no-headers | awk '{print $1}') -c edge-node -- journalctl -xeu cluster-agent --no-tail > cypress/logs/cluster-orch/enic-cluster-agent.log || true
    - name: Run AppOrch Cypress tests
      id: app_orch_tests
      if: ${{ always() && inputs.app_orch == 'true' }}
      working-directory: orch-ui/tests
      shell: bash
      run: |
        npx cypress run --e2e \
          -s "cypress/e2e/app-orch/deployment-package-smoke.cy.ts"
        # These tests are not stable yet, will be enabled in a separate PR
        # npx cypress run --e2e \
        #   -s cypress/e2e/app-orch/deployment-smoke.cy.ts
    - name: Collect AppOrch logs
      if: ${{ always() && inputs.app_orch == 'true' }}
      working-directory: orch-ui/tests
      shell: bash
      run: |
        mkdir -p cypress/logs/app-orch
        kubectl logs -n orch-app -l app=app-deployment-api --tail -1 > cypress/logs/app-orch/app-deployment-api.log
        kubectl logs -n orch-app -l app=app-deployment-manager --tail -1 > cypress/logs/app-orch/app-deployment-manager.log
        kubectl logs -n orch-app -l app=app-resource-manager --tail -1 > cypress/logs/app-orch/app-resource-manager.log
        kubectl logs -n orch-app -l app.kubernetes.io/name=application-catalog --tail -1 > cypress/logs/app-orch/application-catalog.log

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4.4.3
      with:
        name: ${{ github.event_name }}-${{ github.event.number }}-cypress-reports
        path: |
          orch-ui/tests/cypress/screenshots/**/*
          orch-ui/tests/cypress/videos/*.mp4
          orch-ui/tests/cypress/reports/*
          orch-ui/tests/cypress/logs/**/*
