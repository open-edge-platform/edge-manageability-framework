# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: "Deploy Orchestrator on Kind"
description: "Creates a single node Kind cluster and Deploys the Orchestrator on it"
inputs:
  orch_version:
    required: false
    description: "Orchestrator version to deploy"
    default: "main"
  orch_password:
    required: true
    description: "Password to use to deploy Orchestrator"
  docker_username:
    required: true
    description: "Docker Hub username for pulling images"
  docker_password:
    required: true
    description: "Docker Hub password for pulling images"
  token:
    required: true
    description: "PAT token for private repositories"
  deployment_type:
    required: false
    description: "Type of deployment to perform"
    default: "all"
    type: choice
    options:
      - all
      - minimal

runs:
  using: "composite"
  steps:
  - name: Checkout code
    uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
    with:
      repository: open-edge-platform/edge-manageability-framework
      ref: ${{ inputs.orch_version }}
      persist-credentials: false

  - name: Set up git credentials
    shell: bash
    env:
      TOKEN: ${{ inputs.token }}
    run: |
      echo "GOPRIVATE=github.com/open-edge-platform" >> $GITHUB_ENV
      git config --global url."https://$TOKEN:x-oauth-basic@github.com/".insteadOf "https://github.com/"

  - name: Setup asdf and install dependencies
    id: install-deps
    uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

  - name: Print current git hash
    shell: bash
    env:
      EDGE_MANAGEABILITY_FRAMEWORK_REV: ${{ inputs.orch_version }}
    run: echo "Current git hash is \"$EDGE_MANAGEABILITY_FRAMEWORK_REV\""

  - name: Deploy External Orchestrator
    id: deploy-external-orchestrator
    env:
      GIT_USER: "git"
      GIT_TOKEN: ${{ inputs.token }}
      EDGE_MANAGEABILITY_FRAMEWORK_REV: ${{ inputs.orch_version }}
      ORCH_DEFAULT_PASSWORD: ${{ inputs.orch_password }}
      DOCKERHUB_TOKEN: ${{ inputs.docker_password }}
      DOCKERHUB_USERNAME: ${{ inputs.docker_username }}
      DEPLOYMENT_TYPE: ${{ inputs.deployment_type }}
    shell: bash
    run: |
      set +x
      echo "Starting to deploy Orchestrator..."
      if [ "$DEPLOYMENT_TYPE" == "minimal" ]; then
        echo "Deploying minimal Orchestrator setup..."
        mage deploy:kindMinimal
      else
        echo "Deploying full Orchestrator setup..."
        mage deploy:kindAll
      fi
      echo "Orchestrator deployment done!"
  - name: Get Root App Status
    shell: bash
    if: ${{ always() && steps.deploy-external-orchestrator.conclusion != 'success' }}
    run: |
      echo "Root App Status:"
      kubectl get pods -o wide -A
      kubectl -n dev get applications root-app -o yaml || true
  - name: Verify Kind Deployment
    id: verify-kind-deployment
    shell: bash
    run: |
      echo "Starting to verify Orchestrator deployment..."
      mage deploy:waitUntilComplete
      echo "Orchestrator deployment verified!"
      mage router:stop router:start
      echo "Router restarted"
  - name: Setup Test environment
    shell: bash
    run: |
      sudo awk -i inplace '/BEGIN ORCH DEVELOPMENT HOSTS/,/END ORCH DEVELOPMENT HOSTS/ { next } 1' /etc/hosts
      sudo awk -i inplace '/BEGIN ORCH SRE DEVELOPMENT HOST/,/END ORCH SRE DEVELOPMENT HOST/ { next } 1' /etc/hosts
      mage gen:hostfileTraefik | sudo tee -a /etc/hosts > /dev/null
      echo "Updated Hostfile entries!"
      mage gen:orchCa deploy:orchCa
