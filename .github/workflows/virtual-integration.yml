# SPDX-FileCopyrightText: 2025 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

name: Virtual Integration

on:
  # Allow manually triggering the workflow
  workflow_dispatch: {}
  # Run on all commits that are pushed to all branches
  push:
    branches:
      - main
      - main-pass-validation

  # Trigger workflow on PRs to all branches
  pull_request:
    branches:
      - "*"
    types:
      - opened
      - synchronize
      - reopened
  # Trigger workflow when enqueued to a merge group
  merge_group:

# Only run at most 1 workflow concurrently per PR, unlimited for branches
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions: {}

jobs:
  pre-merge:
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
    uses: open-edge-platform/orch-ci/.github/workflows/pre-merge.yml@7221fef1cf3ce70185cbe8c3f53a85be4e7e7cbd  # 0.1.48
    with:
      run_version_check: false
      run_build: false
      run_lint: false
      run_test: false
      bootstrap_tools: ""
      trivy_config_path: trivy.yaml

  check-changed-files:
    permissions:
      contents: read
    name: Filter list of changed files
    runs-on: ubuntu-latest
    outputs:
      ci: ${{ contains(steps.check-files.outputs.changed_files, '.github/workflows') || contains(steps.check-files.outputs.changed_files, '.github/actions') }}
      go: ${{ contains(steps.check-files.outputs.changed_files, '.go') || contains(steps.check-files.outputs.changed_files, '.mod') || contains(steps.check-files.outputs.changed_files, '.sum') }}
      markdown: ${{ contains(steps.check-files.outputs.changed_files, '.md') || contains(steps.check-files.outputs.changed_files, '.markdown') || contains(steps.check-files.outputs.changed_files, '.mdx') }}
      orch: ${{ contains(steps.check-files.outputs.changed_files, 'argocd') || contains(steps.check-files.outputs.changed_files, 'bootstrap') || contains(steps.check-files.outputs.changed_files, 'installer') || contains(steps.check-files.outputs.changed_files, 'internal') || contains(steps.check-files.outputs.changed_files, 'mage') || contains(steps.check-files.outputs.changed_files, 'node') || contains(steps.check-files.outputs.changed_files, 'router') || contains(steps.check-files.outputs.changed_files, 'tools') || contains(steps.check-files.outputs.changed_files, 'e2e-tests') || contains(steps.check-files.outputs.changed_files, 'VERSION') }}
      on-prem: ${{ contains(steps.check-files.outputs.changed_files, 'on-prem-installers') || contains(steps.check-files.outputs.changed_files, 'terraform') }}
      onboarding: ${{ contains(steps.check-files.outputs.changed_files, 'argocd/applications/templates/infra-') || contains(steps.check-files.outputs.changed_files, 'argocd/applications/values.yaml') }}
      shell: ${{ contains(steps.check-files.outputs.changed_files, '.sh') || contains(steps.check-files.outputs.changed_files, '.bash') }}
      terraform: ${{ contains(steps.check-files.outputs.changed_files, '.hcl') || contains(steps.check-files.outputs.changed_files, '.tf') || contains(steps.check-files.outputs.changed_files, '.tfvars') }}
      yaml: ${{ contains(steps.check-files.outputs.changed_files, '.yaml') || contains(steps.check-files.outputs.changed_files, '.yml') }}
      helm: ${{ contains(steps.check-files.outputs.changed_files, 'argocd/') || contains(steps.check-files.outputs.changed_files, 'argocd-internal/') }}
      test-automation: ${{ contains(steps.check-files.outputs.changed_files, '.test-dependencies.yaml') }}
      only_design_proposals: ${{ steps.only-design-proposals.outputs.only_design_proposals }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Discover Changed Files
        id: check-files
        uses: open-edge-platform/orch-ci/discover-changed-files@main  # zizmor: ignore[unpinned-uses]
        with:
          project_folder: "."

      - name: Calculate only_design_proposals
        id: only-design-proposals
        run: |
          files="${{ steps.check-files.outputs.changed_files }}"
          only_design=true
          # Remove brackets and quotes, then split on comma
          clean_files=$(echo "$files" | sed 's/\[//;s/\]//;s/"//g')
          for file in $(echo "$clean_files" | tr ',' '\n'); do
            file=$(echo $file | xargs) # trim whitespace
            if [[ $file != design-proposals/* ]]; then
              only_design=false
              break
            fi
          done
          echo "only_design=$only_design"
          echo "only_design_proposals=$only_design" >> $GITHUB_OUTPUT

  scan-viruses:
    permissions:
      contents: read
    name: Scan for viruses
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      OUTPUT_FILE: antivirus-report.txt
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: ClamAV
        run: |
          docker run --rm \
          --mount type=bind,source=./,target=/scandir \
          clamav/clamav:stable \
          clamscan --recursive --log=/scandir/${{ env.OUTPUT_FILE }} \
          /scandir

          if [ $? -ne 0 ]; then
            sudo chown $USER:$USER ${{ env.OUTPUT_FILE }}
            exit 1
          fi
          sudo chown $USER:$USER ${{ env.OUTPUT_FILE }}

      - name: Upload evidence
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: antivirus-report
          path: ${{ env.OUTPUT_FILE }}

  lint-markdown:
    permissions:
      contents: read
    name: Lint Markdown
    needs:
      - check-changed-files
    if: needs.check-changed-files.outputs.markdown == 'true' ||  github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up git credentials
        shell: bash
        run: |
          echo "GOPRIVATE=github.com/open-edge-platform" >> $GITHUB_ENV
          git config --global url."https://${{ secrets.SYS_ORCH_GITHUB }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

      - name: Run lint
        run: mage -v lint:markdown

  lint-shell:
    permissions:
      contents: read
    name: Lint shell scripts
    needs:
      - check-changed-files
    if: needs.check-changed-files.outputs.shell == 'true' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

      - name: Run lint
        working-directory: on-prem-installers
        run: shellcheck ***/*.sh

  lint-terraform:
    permissions:
      contents: read
    name: Lint Terraform
    needs:
      - check-changed-files
    if: needs.check-changed-files.outputs.terraform == 'true' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

      - name: Run lint
        run: mage lint:terraform

  lint-yaml:
    permissions:
      contents: read
    name: Lint YAML
    needs:
      - check-changed-files
    if: needs.check-changed-files.outputs.yaml == 'true' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

      - name: Run lint
        run: mage lint:yaml

  lint-helm:
    permissions:
      contents: read
    name: Lint Helm
    needs:
      - check-changed-files
    if: needs.check-changed-files.outputs.helm == 'true' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

      - name: Run lint
        run: mage lint:helm

  lint-go:
    permissions:
      contents: read
    name: Lint Go
    needs:
      - check-changed-files
    if: needs.check-changed-files.outputs.go == 'true' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Set up git credentials
        shell: bash
        run: |
          echo "GOPRIVATE=github.com/open-edge-platform" >> $GITHUB_ENV
          git config --global url."https://${{ secrets.SYS_ORCH_GITHUB }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

      - name: Run lint
        run: mage lint:golang

  lint-version:
    permissions:
      contents: read
    name: Lint version
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          # Fetch all history for all tags and branches
          fetch-depth: 0
          persist-credentials: false

      - name: Prepare ci tools
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          repository: open-edge-platform/orch-ci
          path: orch-ci
          persist-credentials: false

      - name: Set up git credentials
        shell: bash
        run: |
          echo "GOPRIVATE=github.com/open-edge-platform" >> $GITHUB_ENV
          git config --global url."https://${{ secrets.SYS_ORCH_GITHUB }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

      - name: Run lint
        run: |
          orch-ci/scripts/version-check.sh
          mage version:checkVersion

  build-publish:
    permissions:
      contents: read
    name: Build and publish artifacts
    needs:
      - lint-go
      - lint-markdown
      - lint-shell
      - lint-terraform
      - lint-helm
      - lint-yaml
      - lint-version
      - scan-viruses
      - check-changed-files
    if: |
      always() &&
      needs.lint-version.result == 'success' && (
      needs.check-changed-files.outputs.orch == 'true' ||
      needs.check-changed-files.outputs.on-prem == 'true' ||
      needs.check-changed-files.outputs.ci == 'true' ||
      needs.check-changed-files.outputs.test-automation == 'true' ||
      github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/main-pass-validation'
      )
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      deb-version: ${{ steps.set-version.outputs.DEB_VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false
          ref:  ${{ github.event.pull_request.head.sha }}

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up git credentials
        shell: bash
        run: |
          echo "GOPRIVATE=github.com/open-edge-platform" >> $GITHUB_ENV
          git config --global url."https://${{ secrets.SYS_ORCH_GITHUB }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Setup asdf and install dependencies
        uses: open-edge-platform/orch-utils/.github/actions/setup-asdf@main  # zizmor: ignore[unpinned-uses]

      - name: Get version tag
        id: get_version_tag
        run: |
          output=$(mage version:getVersionTag)
          echo "versionTag=$output" >> $GITHUB_ENV

      - name: Build DEB packages
        working-directory: on-prem-installers
        run: mage build:all

      - name: Set DEB_VERSION
        id: set-version
        working-directory: on-prem-installers
        run: |
          mage build:debVersion
          echo "DEB_VERSION=$(mage build:debVersion)" >> "$GITHUB_OUTPUT"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722  # v4.0.1
        with:
          aws-access-key-id: ${{ secrets.NO_AUTH_ECR_PUSH_USERNAME }}
          aws-secret-access-key: ${{ secrets.NO_AUTH_ECR_PUSH_PASSWD }}
          aws-region: us-west-2

      - name: Login to ECR
        run: aws ecr get-login-password --region us-west-2 | oras login -u AWS --password-stdin 080137407410.dkr.ecr.us-west-2.amazonaws.com

      - name: Publish on-prem installer artifacts
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        working-directory: on-prem-installers
        run: mage publish:all

      - name: Publish Orchestrator source code artifacts
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: mage publish:sourceTarballs

      - name: Login to ECR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772  # v3.4.0
        with:
          registry: 080137407410.dkr.ecr.us-west-2.amazonaws.com

      - name: Build Cloud Installer and release bundle artifacts
        run: |
          mage installer:build
          mage installer:bundle

      - name: Scan Cloud Installer Image
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5  # v0.30.0
        with:
          image-ref: 080137407410.dkr.ecr.us-west-2.amazonaws.com/edge-orch/common/orchestrator-installer-cloudfull:${{ env.versionTag }}
          format: table
          output: "trivy-orchestrator-installer-cloudfull.txt"
          ignore-unfixed: true

      - name: Calculate MD5 Checksum
        id: checksum
        run: |
          md5sum_value=$(md5sum "trivy-orchestrator-installer-cloudfull.txt" | cut -d " " -f 1)
          echo "md5sum is $md5sum_value"
          echo "md5sum_value=$md5sum_value" >> "$GITHUB_ENV"

      - name: Upload Trivy Image Scan Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: trivy-scan-report-orchestrator-installer-cloudfull-${{ env.md5sum_value }}
          path: trivy-orchestrator-installer-cloudfull.txt

      - name: Publish Cloud Installer artifact
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation' )
        run: mage publish:cloudInstaller

      - name: Build release manifest artifact
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation' )
        run: |
          mkdir -p release-manifest
          mage -v gen:releaseManifest release-manifest/chart-manifest.yaml
          mage -v gen:releaseImageManifest release-manifest/image-manifest.yaml

      - name: Publish release manifest artifact
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-pass-validation' )
        run: |
          mage publish:releaseManifest

  deploy-kind:
    permissions:
      contents: read
    name: Deploy Kind Orchestrator and run tests
    needs:
      - lint-go
      - lint-markdown
      - lint-shell
      - lint-terraform
      - lint-version
      - lint-helm
      - lint-yaml
      - check-changed-files
    if: |
      always() &&
      needs.lint-version.result == 'success' &&
      needs.check-changed-files.outputs.only_design_proposals != 'true' && (
      needs.check-changed-files.outputs.orch == 'true' ||
      needs.check-changed-files.outputs.ci == 'true' ||
      github.ref == 'refs/heads/main' ||
      github.ref == 'refs/heads/main-pass-validation'
      )
    runs-on: ubuntu-24.04-16core-64GB
    timeout-minutes: 90
    env:
      ORCH_DEFAULT_PASSWORD: ${{ secrets.ORCH_DEFAULT_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false

      - name: Checkout virtual-edge-node repo
        uses: actions/checkout@v4
        with:
          repository: open-edge-platform/virtual-edge-node
          ref: pico/1.5.5
          path: virtual-edge-node
          persist-credentials: false
      - name: setup dnsmask
        run: |
          pwd
          ls -lrt
          cp -rf virtual-edge-node $HOME/
          ls -lrt $HOME/
          cd virtual-edge-node/vm-provisioning/scripts
          chmod +x ci_setup_dnsmasq.sh || true
          # original logic invoked ci_setup_dnsmasq.sh with arguments
          ./ci_setup_dnsmasq.sh "kind.internal" setup

      - name: Start install_packages for libvirt
        run: |
          cp -rf virtual-edge-node $HOME/
          cd virtual-edge-node/vm-provisioning
          # ensure script is executable
          chmod +x install_packages.sh
          ./install_packages.sh
          

      - name: Deploy Kind Orchestrator
        id: deploy-kind-orchestrator
        uses: ./.github/actions/deploy_kind
        timeout-minutes: 45
        with:
          orch_version: ${{ github.event.pull_request.head.sha || github.sha }}
          orch_password: ${{ secrets.ORCH_DEFAULT_PASSWORD }}
          docker_username: ${{ secrets.SYS_DOCKERHUB_USERNAME }}
          docker_password: ${{ secrets.SYS_DOCKERHUB_RO }}
          token: ${{ secrets.SYS_ORCH_GITHUB }}
          deployment_type: all
      - name: Collect diagnostics
        if: always()
        uses: ./.github/actions/collect_diagnostics
        timeout-minutes: 15
      - name: config dnsmask
        run: |
          pwd
          ls -lrt
          ls -lrt $HOME/
          cp -rf $HOME/virtual-edge-node .
          cd virtual-edge-node/vm-provisioning/scripts
           chmod +x ci_setup_dnsmasq.sh || true
          ./ci_setup_dnsmasq.sh "kind.internal" config
          dig web-ui.kind.internal  
      - name: Run policy compliance tests
        run: mage test:policyCompliance
      - name: Run image pull policy compliance tests
        run: mage test:imagePullPolicyCompliance
      - name: Setup Sample Org and Project with default users
        id: default-mt-setup
        run: mage tenantUtils:createDefaultMtSetup
      - name: Deploy Victoria Metrics instance
        env:
          ORCH_DEFAULT_PASSWORD: ${{ secrets.ORCH_DEFAULT_PASSWORD }}
        run: mage deploy:victoriaMetrics apply
      - name: Run e2e tenancy tests
        run: mage test:e2etenancy
      - name: Run e2e tenancy API gateway tests
        run: mage test:e2etenancyapigw
      - name: Create default user and run e2e tests
        run: mage devUtils:createDefaultUser test:e2e
      - name: Start VEN Deploy
        env:
          LIBVIRT_DEFAULT_URI: 'qemu:///system'
        run: |
          set -euo pipefail
      
          # Prepare sources
          cp -rf $HOME/virtual-edge-node .
          cd virtual-edge-node/pico/
      
          # Ensure asdf plugins
          asdf plugin-add terraform https://github.com/asdf-community/asdf-hashicorp.git || true
          asdf plugin-add tflint https://github.com/skyzyx/asdf-tflint.git || true
          asdf install
      
          cd modules/pico-vm-libvirt/
      
          echo "Terraform version:"
          terraform version
      
          # Libvirt checks (run with sudo since CI user may not be in libvirt group)
          sudo virsh list --all || true
          sudo virsh net-list --all || true
          sudo virsh pool-list --all || true
      
          # Write tfvars
          cat > terraform.tfvars <<EOF
          tinkerbell_nginx_domain = "tinkerbell-nginx.kind.internal"
          smbios_serial           = "ventesten1"
          libvirt_pool_name       = "default"
          libvirt_network_name    = "default"
          vm_console              = "file"
          EOF
      
          # Terraform apply
          terraform init -input=false
          terraform apply --var-file=terraform.tfvars -auto-approve
      
          # Show last 100 lines of console log instead of blocking forever
          sudo tail -n 100 /var/log/libvirt/qemu/pico-node-libvirt-console.log || true
